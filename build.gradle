plugins {
    id "org.springframework.boot" version "2.1.0.RELEASE"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
}



version "0.1"
group "hello.world"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.3'
        mavenBom "org.springframework.boot:spring-boot-dependencies:2.1.4.RELEASE"
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    annotationProcessor "io.micronaut.spring:micronaut-spring-boot-annotation:1.0.1"
    annotationProcessor "io.micronaut.spring:micronaut-spring-web-annotation:1.0.1"
    testAnnotationProcessor "io.micronaut.spring:micronaut-spring-web-annotation"

    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"

    compile "io.swagger.core.v3:swagger-annotations"
    compile "io.micronaut:micronaut-inject"
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('org.springframework.boot:spring-boot-starter-webflux')

    compile("io.micronaut:micronaut-http-server")
    compile("io.micronaut:micronaut-http-server-netty")

    runtime "io.micronaut.spring:micronaut-spring-annotation:1.0.1"
    runtime("io.micronaut.spring:micronaut-spring-web:1.0.1")
    runtime("io.micronaut.spring:micronaut-spring-boot:1.0.1")
    runtime("io.micronaut.spring:micronaut-spring-context:1.0.1")

    compileOnly "com.oracle.substratevm:svm"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "ognl:ognl:3.1.12"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
}


mainClassName = "hello.world.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
